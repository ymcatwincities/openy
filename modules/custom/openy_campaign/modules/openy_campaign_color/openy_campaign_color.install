<?php

/**
 * @file
 * Provides install, update, and uninstall functions.
 */

/**
 * Implements hook_requirements().
 */
function openy_campaign_color_requirements($phase) {
  $requirements = [];

  if ($phase == 'runtime' || $phase == 'update' || $phase == 'install') {
    // Adapted from system_requirements().
    $directory = 'public://' . CAMPAIGN_COLORS_CSS_FOLDER;
    if (!is_dir($directory) || !is_writable($directory)) {
      file_prepare_directory($directory, FILE_CREATE_DIRECTORY | FILE_MODIFY_PERMISSIONS);
    }
    $is_writable = is_writable($directory);
    $is_directory = is_dir($directory);
    if (!$is_writable || !$is_directory) {
      // The snippet directory does not exist or is not writable.

      $wrapper = \Drupal::service('stream_wrapper_manager')->getViaUri($directory);
      if (method_exists($wrapper, 'getDirectoryPath') && ($path = $wrapper->getDirectoryPath())) {
        $path .= '/' . CAMPAIGN_COLORS_CSS_FOLDER;
      }
      elseif (!($path = $wrapper->getExternalUrl())) {
        $path = $directory;
      }

      if (!$is_directory) {
        $error = t('The directory %directory does not exist.', ['%directory' => $path]);
        $description = t('An automated attempt to create the directory failed, possibly due to a permissions problem. Create the directory and make it writable.');
        $value = t('Does not exist');
      }
      else {
        $error = t('The directory %directory is not writable.', ['%directory' => $path]);
        $description = t('An automated attempt to make the directory writable failed, possibly due to a permissions problem. Make the directory writable.');
        $value = t('Not writable');
      }
      if ($phase == 'install') {
        $description .= t(' For more information, see INSTALL.txt or the <a href=":handbook_url">online handbook</a>.', [':handbook_url' => 'https://www.drupal.org/server-permissions']);
        $value = '';
      }
      $description = [
        '#type' => 'inline_template',
        '#template' => '{{ error }} {{ description }}',
        '#context' => [
          'error' => $error,
          'description' => $description,
        ],
      ];
      $requirements['openy_campaign_color_snippet_directory'] = [
        'title' => t('OpenY Campaign Color snippet directory'),
        'description' => $description,
        'severity' => REQUIREMENT_ERROR,
        'value' => $value,
      ];
    }
  }
  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function openy_campaign_color_uninstall() {
  @file_unmanaged_delete_recursive('public://' . CAMPAIGN_COLORS_CSS_FOLDER);
  \Drupal::service('asset.js.collection_optimizer')->deleteAll();
  _drupal_flush_css_js();
}
