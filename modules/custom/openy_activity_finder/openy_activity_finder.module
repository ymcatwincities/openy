<?php

/**
 * @file
 * Contains openy_activity_finder module hooks.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Entity\EntityInterface;
use Drupal\openy_activity_finder\OpenyActivityFinderSolrBackend;

/**
 * Implements hook_theme().
 */
function openy_activity_finder_theme() {
  return [
    'openy_activity_finder_program_search' => [
      'variables' => [
        'data' => [],
        'ages' => [],
        'days' => [],
        'categories' => [],
        'categories_type' => '',
        'activities' => [],
        'locations' => [],
        'is_search_box_disabled' => '',
        'expanderSectionsConfig' => [],
      ],
    ],
    'openy_activity_finder_program_search_page' => [
      'variables' => [
        'locations' => [],
        'categories' => [],
        'categories_type' => '',
        'ages' => [],
        'days' => [],
        'is_search_box_disabled' => '',
        'is_spots_available_disabled' => '',
        'expanderSectionsConfig' => [],
        'sort_options' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_entity_insert().
 */
function openy_activity_finder_entity_insert(EntityInterface $entity) {
  _openy_activity_finder_invalidate_cache($entity);
}

/**
 * Implements hook_entity_update().
 */
function openy_activity_finder_entity_update(EntityInterface $entity) {
  _openy_activity_finder_invalidate_cache($entity);
}

/**
 * Implements hook_entity_delete().
 */
function openy_activity_finder_entity_delete(EntityInterface $entity) {
  _openy_activity_finder_invalidate_cache($entity);
}

/**
 * Helper function for Activity Finder cache invalidation.
 */
function _openy_activity_finder_invalidate_cache($entity) {
  if ($entity->getEntityTypeId() != 'node') {
    return;
  }

  $bundle = $entity->bundle();
  if (!in_array($bundle, ['program_subcategory', 'branch', 'camp', 'facility'])) {
    return;
  }

  // Invalidate activity finder cache.
  Cache::invalidateTags([OpenyActivityFinderSolrBackend::ACTIVITY_FINDER_CACHE_TAG]);
}
