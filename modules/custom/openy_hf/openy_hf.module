<?php

/**
 * @file
 * OpenY HF routines.
 */

use Drupal\Component\Utility\Html;
use Drupal\core\Render\Markup;
use Symfony\Component\HttpFoundation\Request;
use Drupal\Core\Asset\AttachedAssets;

const OPENY_HF_DEFAULT_LIFETIME = 28800;

/**
 * Implements hook_page_attachments().
 */
function openy_hf_page_attachments(array &$attachments) {
  $config = \Drupal::config('openy_hf.settings');

  // Create CSS from config.
  $css = '';
  foreach ($config->get('header_replacements') as $id => $replacement) {
    $css .= $replacement['selector'] . " {\r\ndisplay: none;\r\n}\r\n";
  }
  foreach ($config->get('footer_replacements') as $id => $replacement) {
    $css .= $replacement['selector'] . " {\r\ndisplay: none;\r\n}\r\n";
  }

  // Save it as CSS file to public directory.
  file_unmanaged_save_data($css, 'public://openy_hf.css', FILE_EXISTS_REPLACE);

  $header_replacements = $config->get('header_replacements');
  $footer_replacements = $config->get('footer_replacements');
  $attachments['#attached']['drupalSettings']['openy_hf.header_replacements'] = $header_replacements;
  $attachments['#attached']['drupalSettings']['openy_hf.footer_replacements'] = $footer_replacements;

  // Add cookie lifetime settings.
  $cookie_lifetime = $config->get('cookie_lifetime');
  if (!is_numeric($cookie_lifetime) || !$cookie_lifetime) {
    $cookie_lifetime = OPENY_HF_DEFAULT_LIFETIME;
  }
  $attachments['#attached']['drupalSettings']['openy_hf.cookieLifeTime'] = $cookie_lifetime;

  $attachments['#attached']['library'][] = 'openy_hf/openy_hf_generic';
}

/**
 * Implements hook_preprocess_html().
 */
function openy_hf_preprocess_html(&$variables) {
  $route = \Drupal::service('current_route_match')->getRouteName();
  if ($route == 'openy_hf.header' || $route == 'openy_hf.footer') {
    $base_url = Request::createFromGlobals()->getSchemeAndHttpHost();
    $variables['base_path'] = $base_url;
    $placeholders = $variables['#attached']['html_response_attachment_placeholders'];
    $assets = AttachedAssets::createFromRenderArray(['#attached' => $variables['page']['#attached']]);
    $ajax_page_state = \Drupal::service('request_stack')->getCurrentRequest()->get('ajax_page_state');
    $assets->setAlreadyLoadedLibraries(isset($ajax_page_state) ? explode(',', $ajax_page_state['libraries']) : []);
    // Print styles - if present.
    if (isset($placeholders['styles'])) {
      // Optimize CSS if necessary, but only during normal site operation.
      $optimize_css = FALSE;
      $styles = \Drupal::service('asset.css.collection_renderer')->render(\Drupal::service('asset.resolver')->getCssAssets($assets, $optimize_css));
      foreach ($styles as $key => $style) {
        $variables['styles'][] = $style;
        if (substr($style['#attributes']['href'], 0, 2) !== '//') {
          $variables['styles'][$key]['#attributes']['href'] = $base_url . $style['#attributes']['href'];
        }
      }
    }

    // Print scripts - if any are present.
    if (isset($placeholders['scripts']) || isset($placeholders['scripts_bottom'])) {
      // Optimize JS if necessary, but only during normal site operation.
      $optimize_js = FALSE;
      list($js_assets_header, $js_assets_footer) = \Drupal::service('asset.resolver')->getJsAssets($assets, $optimize_js);
      $scripts = \Drupal::service('asset.js.collection_renderer')->render($js_assets_header);
      foreach ($scripts as $key => $script) {
        $variables['scripts'][] = $script;
        if (substr($script['#attributes']['href'], 0, 2) !== '//') {
          $variables['scripts'][$key]['#attributes']['href'] = $base_url . $script['#attributes']['href'];
        }
      }
      $scripts_bottom = \Drupal::service('asset.js.collection_renderer')->render($js_assets_footer);
      foreach ($scripts_bottom as $key => $script_bottom) {
        $variables['scripts_bottom'][] = $script_bottom;
        if (substr($script_bottom['#attributes']['src'], 0, 2) !== '//') {
          $variables['scripts_bottom'][$key]['#attributes']['src'] = $base_url . $script_bottom['#attributes']['src'];
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function openy_hf_preprocess_page(&$variables) {
  $route = \Drupal::service('current_route_match')->getRouteName();
  if ($route == 'openy_hf.header' || $route == 'openy_hf.footer') {
    // Make relative to absolute urls.
    $regions = [
      'secondary_menu',
      'primary_menu',
      'footer',
      'footer_menus',
    ];
    unset($variables['page']['header']);
    unset($variables['page']['secondary_menu']['openy_rose_user_menu']);
    unset($variables['page']['pre_footer']);
    unset($variables['page']['footer_social']['footersocialblock']);
    // There are better ways to grab the $base_url for sure.
    $base_url = Request::createFromGlobals()->getSchemeAndHttpHost();
    $variables['base_path'] = $base_url;
    foreach ($regions as $region) {
      $variables['page'][$region] = \Drupal::service('renderer')
        ->renderRoot($variables['page'][$region]);
      // Convert the whole message body. Returns string.
      $converted = Html::transformRootRelativeUrlsToAbsolute($variables['page'][$region], $base_url);
      // In case you need an instance of Markup class prepare it here.
      $variables['page'][$region] = Markup::create($converted);
    }
  }
}
