<?php

/**
 * @file
 * Open Y Media module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_form_alter().
 */
function openy_media_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'entity_browser_images_library_embed_form':
    case 'entity_browser_images_library_form':
    case 'entity_browser_documents_library_embed_form':
    case 'entity_browser_documents_library_form':
    case 'entity_browser_videos_library_embed_form':
    case 'entity_browser_videos_library_form':
    case 'entity_browser_local_video_library_form':
    case 'entity_browser_local_video_library_embed_form':
      $form['#attached']['library'][] = 'openy_media/browser';
      break;
  }
}

/**
 * Preprocess function for grid views of the media library.
 *
 * @param array $variables
 *   Template variables.
 */
function openy_media_preprocess_views_view_grid(array &$variables) {
  switch ($variables['view']->storage->id()) {
    case 'images_library':
    case 'documents_library':
    case 'videos_library':
    case 'local_videos_library':
      foreach ($variables['items'] as &$item) {
        foreach ($item['content'] as &$column) {
          $column['attributes']['data-selectable'] = 'true';
        }
      }
      break;
  }
}

/**
 * Prepares variables for entity embed container templates.
 *
 * Default template: entity-embed-container.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #attributes, #children.
 */
function openy_media_preprocess_entity_embed_container(array &$variables) {
  $view_mode = $variables['element']['#context']['data-entity-embed-display'];
  // Make the view mode context CSS class name compatible.
  $variables['attributes']['class'][] = Html::cleanCssIdentifier($view_mode, [
    ':' => '-',
    '.' => '-',
    '_' => '-',
  ]);
}

/**
 * Implements hook_library_info_alter().
 */
function openy_media_library_info_alter(&$libraries, $extension) {
  if ($extension === 'blazy' && function_exists('libraries_get_path')) {
    $libraries['blazy']['js']['/' . libraries_get_path('blazy') . '/blazy.min.js']['attributes'] = [
      'defer' => TRUE,
    ];
  }
}
