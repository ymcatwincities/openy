<?php

/**
 * @file
 * Contains install and update routines.
 */

use Drupal\openy_media\EmbedButtonIconHelper;

/**
 * Implements hook_install().
 */
function openy_media_document_install() {
  EmbedButtonIconHelper::setEmbedButtonIcon('openy_media_document', 'document.png', 'embed_document');
}

/**
 * Implements hook_update_dependencies().
 */
function openy_media_document_update_dependencies() {
  $dependencies['dropzonejs_eb_widget'][8101] = array(
    'openy_media_document' => 8005,
  );

  return $dependencies;
}

/**
 * Update description for fields.
 */
function openy_media_document_update_8001() {
  $config_dir = drupal_get_path('module', 'openy_media_document') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.media.document.field_media_in_library' => [
      'description',
    ],
    'field.field.media.document.field_media_tags' => [
      'description',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update OpenY Media Document feature config.
 */
function openy_media_document_update_8002() {
  $config_dir = drupal_get_path('module', 'openy_media_document') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'core.entity_view_display.media.document.teaser' => [
      'content',
      'hidden',
    ],
    'views.view.documents_library' => [
      'display.default.cache_metadata.tags',
      'display.documents_library.cache_metadata.tags',
    ],
    'core.entity_view_display.media.document.embedded_link' => [
      'dependencies.module',
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.document.embedded_half' => [
      'dependencies.module',
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.document.embedded_full' => [
      'dependencies.module',
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.document.default' => [
      'content',
      'hidden',
    ],
    'core.entity_form_display.media.document.default' => [
      'content',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update default document display.
 */
function openy_media_document_update_8003() {
  // Update multiple configurations.
  $configs = [
    'core.entity_view_display.media.document.default' => [
      'dependencies',
      'content',
      'hidden'
    ],
  ];

  $config_dir = drupal_get_path('module', 'openy_media_document') . '/config/install/';
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update default document display.
 */
function openy_media_document_update_8004() {
  // Re trigger update after fixed name.
  openy_media_document_update_8003();
}

/**
 * Update document library view for core upgrade.
 */
function openy_media_document_update_8005() {
  $config_dir = drupal_get_path('module', 'openy_media_document') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'views.view.documents_library' => [
      'display.default.cache_metadata',
      'display.documents_library.cache_metadata',
    ],
    'entity_browser.browser.documents_library' => [
      'dependencies.config',
      'widgets',
    ],
    'entity_browser.browser.documents_library_embed' => [
      'dependencies.config',
      'widgets',
    ],
    'core.entity_form_display.media.document.default' => [
      'dependencies.module',
      'content.langcode',
      'content.path',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}
