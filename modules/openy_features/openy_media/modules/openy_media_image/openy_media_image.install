<?php

/**
 * @file
 * Contains install and update routines.
 */

use Drupal\openy_media\EmbedButtonIconHelper;

/**
 * Implements hook_install().
 */
function openy_media_image_install() {
  EmbedButtonIconHelper::setEmbedButtonIcon('openy_media_image', 'image.png', 'embed_image');
}

/**
 * Implements hook_update_dependencies().
 */
function openy_media_image_update_dependencies() {
  $dependencies['openy_media_image'] = [
    8007 => [
      'openy_media' => 8003,
    ],
    8008 => [
      'openy' => 8042,
    ],
  ];

  $dependencies['dropzonejs_eb_widget'][8101] = array(
    'openy_media_image' => 8009,
  );

  return $dependencies;
}

/**
 * Update description for fields.
 */
function openy_media_image_update_8001() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.media.image.field_media_caption' =>[
      'description',
    ],
    'field.field.media.image.field_media_image' => [
      'description',
    ],
    'field.field.media.image.field_media_in_library' => [
      'description',
    ],
    'field.field.media.image.field_media_tags' => [
      'description',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Change dropzonejs type in entity browser for image.
 */
function openy_media_image_update_8002() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.media.image.field_media_image' =>[
      'settings.alt_field_required',
    ],
    'entity_browser.browser.images_library' =>[
      'widgets',
    ],
    'entity_browser.browser.images_library_embed' => [
      'widgets',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Import new image style config for thumbnail.
 */
function openy_media_image_update_8003() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Import new configuration
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'image.style.thumbnail_for_preview',
  ]);
}

/**
 * Import new view mode config for thumbnail.
 */
function openy_media_image_update_8004() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Import new configuration
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'core.entity_view_mode.media.thumbnail_for_preview',
    'core.entity_view_display.media.image.thumbnail_for_preview',
  ]);
}

/**
 * Update OpenY media image feature configs.
 */
function openy_media_image_update_8005() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'core.entity_form_display.media.image.default' => [
      'content',
    ],
    'core.entity_view_display.media.image.default' => [
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.image.embedded_full' => [
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.image.embedded_half' => [
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.image.embedded_link' => [
      'dependencies.module',
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.image.icon' => [
      'content',
      'hidden',
    ],
    'core.entity_view_display.media.image.teaser' => [
      'content',
      'hidden',
    ],
    'core.entity_view_mode.media.thumbnail_for_preview' => [
      'label',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update OpenY media image feature configs for Blazy support.
 */
function openy_media_image_update_8006() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Import configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'core.entity_view_display.media.image.default',
    'core.entity_view_display.media.image.embedded_full',
    'core.entity_view_display.media.image.embedded_half',
    'core.entity_view_display.media.image.icon',
  ]);
}

/**
 * Import OpenY media image view modes without Blazy support.
 */
function openy_media_image_update_8007() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Import configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'core.entity_view_display.media.image.full_without_blazy',
    'core.entity_view_display.media.image.half_without_blazy',
  ]);
}

/**
 * Import OpenY media image style "Thumbnail focal point".
 */
function openy_media_image_update_8008() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';

  // Import configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs(['image.style.thumbnail_focal_point']);

  // Update multiple configurations.
  $configs = [
    'core.entity_form_display.media.image.default' => [
      'dependencies',
      'content.field_media_image',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update library view for core upgrade.
 */
function openy_media_image_update_8009() {
  $config_dir = drupal_get_path('module', 'openy_media_image') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'entity_browser.browser.images_library' => [
      'dependencies.config',
      'widgets',
    ],
    'entity_browser.browser.images_library_embed' => [
      'dependencies.config',
      'widgets',
    ],
    'core.entity_form_display.media.image.default' => [
      'dependencies.module',
      'content.langcode',
      'content.path',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}
