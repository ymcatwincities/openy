<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Open Y Node module file.
 */

/**
 * Implements hook_modules_installed().
 *
 * Perform necessary actions after modules are installed.
 * This function differs from hook_install() in that it gives all other modules
 * a chance to perform actions when a module is installed, whereas
 * hook_install() is only called on the module actually being installed.
 */
function openy_node_modules_installed($modules) {
  if (in_array('simple_sitemap', $modules)) {
    // Import simple_sitemap settings for nodes bundles on module install.
    $config_list = [
      'openy_node_blog' => 'simple_sitemap.bundle_settings.default.node.blog',
      'openy_node_category' => 'simple_sitemap.bundle_settings.default.node.program_subcategory',
      'openy_node_class' => 'simple_sitemap.bundle_settings.default.node.class',
      'openy_node_event' => 'simple_sitemap.bundle_settings.default.node.event',
      'openy_node_landing' => 'simple_sitemap.bundle_settings.default.node.landing_page',
      'openy_node_news' => 'simple_sitemap.bundle_settings.default.node.news',
      'openy_node_program' => 'simple_sitemap.bundle_settings.default.node.program',
      'openy_loc_branch' => 'simple_sitemap.bundle_settings.default.node.branch',
      'openy_loc_camp' => 'simple_sitemap.bundle_settings.default.node.camp',
      'openy_loc_facility' => 'simple_sitemap.bundle_settings.default.node.facility',
    ];
    $module_handler = \Drupal::service('module_handler');
    $config_importer = \Drupal::service('openy_upgrade_tool.importer');
    foreach ($config_list as $module => $config) {
      if ($module_handler->moduleExists($module)) {
        $config_dir = drupal_get_path('module', $module) . '/config/install';
        $config_importer->setDirectory($config_dir);
        $config_importer->importConfigSimple($config);
      }
    }
  }
}

/**
 * Implements hook_form_BASE_ID_alter().
 */
function _openy_node_form_system_site_information_settings_alter(&$form, FormStateInterface $form_state, $form_id)
{
  /** @var Drupal\views\Entity\View $view */
  $view = \Drupal::entityTypeManager()->getStorage('view')->load('frontpage');

  // Allow disabling or enabling default Drupal 'frontpage' Views configuration that .
  $form['front_page']['hide_node'] = [
    '#type' => "checkbox",
    '#title' => t('Disable /node page'),
    '#description' => t(
      'Allows disabling/enabling the default Drupal frontpage Views configuration that 
    introduce /node and /rss.xml URLs. By default these URLs are disabled in Open Y.'
    ),
    '#default_value' => $view->status() ? 0 : 1,
  ];

  $form['actions']['submit']['#submit'][] = 'openy_node_form_submit';
}

/**
 * Submit.
 */
function openy_node_form_submit(array $form, FormStateInterface $form_state) {
  /** @var Drupal\views\Entity\View $view */
  $view = \Drupal::entityTypeManager()->getStorage('view')->load('frontpage');
  if ($form_state->getValue('hide_node')) {
    $view->disable();
  }
  else {
    $view->enable();
  }
  $view->save();
}
