<?php

/**
 * @file
 * Open Y Node Program install file.
 */

/**
 * Implements hook_update_dependencies().
 */
function openy_node_program_update_dependencies() {
  $dependencies['openy_node_program'] = [
    8002 => [
      'openy_node' => 8003,
    ],
    8003 => [
      'openy' => 8015,
    ],
    8008 => [
      'openy_media_image' => 8004,
    ],
    8011 => [
      'openy' => 8042,
    ],
  ];

  return $dependencies;
}

/**
 * Update Node Program fields datalayer config for Data Layer additions.
 */
function openy_node_program_update_8001() {
  // This is outdated update and exist in next hooks, no need to import config twice.
}

/**
 * Update Program with Metatag and Sitemap config.
 */
function openy_node_program_update_8002() {
  $module = 'openy_node_program';
  $bundle = 'program';
  // Field definitions
  $config_dir = drupal_get_path('module', $module) . '/config/install';
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'field.field.node.' . $bundle . '.field_meta_tags',
    'simple_sitemap.bundle_settings.' . $bundle . '.landing_page',
  ]);
  // Dependencies
  $config = drupal_get_path('module', $module) . $module . '.info.yml';
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config_importer->update($config, $module . '.info', 'dependencies');
  // Entity form
  $config = drupal_get_path('module', $module) . '/config/install/core.entity_form_display.node.' . $bundle . '.default.yml';
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config_importer->update($config, 'core.entity_form_display.node.' . $bundle . '.default', 'dependencies.config');
  // Entity view display
  $config = drupal_get_path('module', $module) . '/config/install/core.entity_view_display.node.' . $bundle . '.default.yml';
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config_importer->update($config, 'core.entity_view_display.node.' . $bundle . '.default', 'dependencies.config');
  $config_importer->update($config, 'core.entity_view_display.node.' . $bundle . '.default', 'dependencies.module');

  $config_dir = drupal_get_path('module', $module) . '/config/install';
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'metatag.metatag_defaults.node__' . $bundle,
  ]);
}

/**
 * Enabling scheduler module.
 */
function openy_node_program_update_8003() {
  $config_dir = drupal_get_path('module', 'openy_node_program') . '/config/install/';

  // Update multiple configurations.
  $configs = [
    'core.entity_form_display.node.program.default' => [
      'dependencies.module',
      'content.publish_on',
      'content.unpublish_on',
    ],
    'node.type.program' => [
      'dependencies.module',
      'third_party_settings.scheduler',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update description for fields.
 */
function openy_node_program_update_8004() {
  $config_dir = drupal_get_path('module', 'openy_node_program') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.node.program.field_content' =>[
      'description',
    ],
    'field.field.node.program.field_program_color' => [
      'description',
    ],
    'field.field.node.program.field_program_icon' => [
      'description',
    ],
    'field.field.node.program.field_program_image' => [
      'description',
    ],
    'field.field.node.program.field_sidebar_content' => [
      'description',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Remove DataLayer from dependency in the field instance.
 */
function openy_node_program_update_8005() {
  // This is outdated update and exist in next hooks, no need to import config twice.
}

/**
 * Update description for field meta tags.
 */
function openy_node_program_update_8006() {
  // This is outdated update and exist in next hooks, no need to import config twice.
}

/**
 * Add help text to Header Area.
 */
function openy_node_program_update_8007() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_node_program');
  $config .= '/config/install/';
  $config .= 'core.entity_form_display.node.program.default.yml';
  $config_importer->update(
    $config,
    'core.entity_form_display.node.program.default',
    'third_party_settings.field_group.group_header_area.format_settings.description'
  );
}

/**
 * Update entity reference for field image.
 */
function openy_node_program_update_8008() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_node_program');
  $config .= '/config/install/';
  $config .= 'core.entity_form_display.node.program.default.yml';
  $config_importer->update(
    $config,
    'core.entity_form_display.node.program.default',
    'content'
  );
}

/**
 * Update Open Y program node feature configs.
 */
function openy_node_program_update_8009() {
  $config_dir = drupal_get_path('module', 'openy_node_program') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'core.entity_view_display.node.program.default' => [
      'content',
      'hidden',
    ],
    'core.entity_view_display.node.program.full' => [
      'dependencies.config',
      'content',
      'hidden',
    ],
    'core.entity_view_display.node.program.teaser' => [
      'dependencies.config',
      'content',
      'hidden',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update Open Y node program feature configs for Blazy support.
 */
function openy_node_program_update_8010() {
  $config_dir = drupal_get_path('module', 'openy_node_program') . '/config/install/';
  // Import configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'core.entity_view_display.media.image.node_program_header',
    'field.field.node.program.field_meta_tags',
    'field.field.node.program.field_program_description',
  ]);
}

/**
 * Update Open Y node program feature config for Focal Point support.
 */
function openy_node_program_update_8011() {
  $config_dir = drupal_get_path('module', 'openy_node_program') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'image.style.node_program_header' =>[
      'dependencies',
      'effects',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update feature configs for Drupal Core upgrade.
 */
function openy_node_program_update_8012() {
  $config_dir = drupal_get_path('module', 'openy_node_program') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'core.entity_form_display.node.program.default' => [
      'content.langcode',
      'content.status',
      'content.addthis',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update Open Y node program feature configs to add Header Content field.
 */
function openy_node_program_update_8013() {
  $config_dir = drupal_get_path('module', 'openy_node_program') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'core.entity_form_display.node.program.default' => [
      'dependencies.config',
      'third_party_settings.field_group.group_header_area.children',
      'content.field_header_content',
      'content.field_sidebar_content.weight',
      'third_party_settings.field_group.group_content_area.region',
      'third_party_settings.field_group.group_header_area.region',
      'third_party_settings.field_group.group_sidebar_area.region',
    ],
    'core.entity_view_display.node.program.default' => [
      'dependencies.config',
      'content.field_header_content',

    ],
    'core.entity_view_display.node.program.full' => [
      'dependencies.config',
      'content.field_header_content',
      'content.field_content.weight',
      'content.field_sidebar_content.weight',
      'content.links.weight'
    ],
    'core.entity_view_display.node.program.teaser' => [
      'dependencies.config',
      'hidden.field_header_content',
    ]
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }

  // Import configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'field.field.node.program.field_header_content',
  ]);
}
