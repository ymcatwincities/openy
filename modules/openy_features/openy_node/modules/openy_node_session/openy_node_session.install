<?php

/**
 * @file
 * Open Y Node Session install file.
 */

/**
 * Update Session for rabbit hole, hiding pages from anonymous users.
 */
function openy_node_session_update_8001() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';
  // Import new configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'rabbit_hole.behavior_settings.node_type_session',
  ]);
  // Update multiple configurations.
  $configs = [
    'core.entity_view_display.paragraph.session_time.default' => [
      'content',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update description for field.
 */
function openy_node_session_update_8002() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.node.session.field_session_class' => [
      'description',
    ],
    'field.field.node.session.field_session_description' => [
      'description',
    ],
    'field.field.node.session.field_session_gender' => [
      'description',
    ],
    'field.field.node.session.field_session_in_mbrsh' => [
      'description',
    ],
    'field.field.node.session.field_session_location' => [
      'description',
    ],
    'field.field.node.session.field_session_max_age' => [
      'description',
    ],
    'field.field.node.session.field_session_mbr_price' => [
      'description',
    ],
    'field.field.node.session.field_session_min_age' => [
      'description',
    ],
    'field.field.node.session.field_session_nmbr_price' => [
      'description',
    ],
    'field.field.node.session.field_session_online' => [
      'description',
    ],
    'field.field.node.session.field_session_reg_link' => [
      'description',
    ],
    'field.field.node.session.field_session_ticket' => [
      'description',
    ],
    'field.field.node.session.field_session_time' => [
      'description',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update description for fields.
 */
function openy_node_session_update_8003() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.paragraph.session_time.field_session_time_date' => [
      'description',
    ],
    'field.field.paragraph.session_time.field_session_time_days' => [
      'description',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update Open Y session node feature configs.
 */
function openy_node_session_update_8004() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.node.session.field_session_exclusions' => [
      'description',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update feature configs for Drupal Core upgrade.
 */
function openy_node_session_update_8006() {
  // This is outdated update and exist in next hooks, no need to import config twice.
}

/**
 * Update feature configs after entity reference handler update and configs actualization.
 */
function _openy_node_session_update_8007() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.field.node.session.field_session_class' => [
      'dependencies',
      'settings',
    ],
    'field.field.node.session.field_session_location' => [
      'dependencies',
      'settings',
    ],
    'field.field.node.session.field_session_plocation' => [
      'dependencies',
      'settings',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Add room and instructor fields.
 */
function _openy_node_session_update_8008() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';

  // Add two new fields.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'field.field.node.session.field_session_instructor',
    'field.field.node.session.field_session_room',
    'field.storage.node.field_session_instructor',
    'field.storage.node.field_session_room',
  ]);

  // Update multiple configurations.
  $configs = [
    'core.entity_form_display.node.session.default' =>[
      'dependencies',
      'field_group',
    ],
    'core.entity_view_display.node.session.default' =>[
      'dependencies',
      'content',
    ],
    'field.field.node.session.field_session_plocation' =>[],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update to get fields from prgreg.
 */
function openy_node_session_update_8009() {
  // This is outdated update and exist in next hooks, no need to import config twice.
}

/**
 * Update to get fields from prgreg.
 */
function openy_node_session_update_8010() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';

  // Add two new fields.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'core.entity_form_display.node.session.default',
    'core.entity_form_display.paragraph.session_time.default',
    'core.entity_view_display.node.session.default',
    'field.field.node.session.field_session_plocation',
    'core.entity_view_display.node.session.teaser',
    'field.field.node.session.field_session_room',
    'field.field.node.session.field_availability',
    'field.field.node.session.field_productid',
    'field.field.node.session.field_session_class',
    'field.storage.node.field_session_room',
    'field.storage.node.field_availability',
    'field.storage.node.field_productid',
    'field.field.node.session.field_session_instructor',
    'field.field.node.session.field_session_location',
    'paragraphs.paragraphs_type.session_time',
    'field.storage.node.field_session_instructor',
  ]);
}

/**
 * Add new field_activity_type.
 */
function openy_node_session_update_8011() {
  $config_dir = drupal_get_path('module', 'openy_node_session') . '/config/install/';

  // Add two new fields.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'field.storage.node.field_activity_type',
    'field.field.node.session.field_activity_type',
    'core.entity_view_display.node.session.default',
    'core.entity_form_display.node.session.default',
  ]);
}
