<?php

/**
 * @file
 * Open Y Taxonomy install file.
 */

  /**
 * Implement hook_install().
 */
function openy_taxonomy_install() {
  $config = \Drupal::configFactory()->loadMultiple(['views.view.taxonomy_term']);
  if (array_key_exists('views.view.taxonomy_term', $config)) {
    $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
    $config = drupal_get_path('module', 'openy_taxonomy');
    $config .= '/config/override/views.view.taxonomy_term.yml';
    $config_updater->update($config, 'views.view.taxonomy_term', 'display');
  }
  else {
    $config_dir = drupal_get_path('module', 'openy_taxonomy') . '/config/override/';
    // Import new configuration
    $config_importer = \Drupal::service('openy_upgrade_tool.importer');
    $config_importer->setDirectory($config_dir);
    $config_importer->importConfigs([
      'views.view.taxonomy_term',
    ]);
  }
}

/**
 * Update pager settings in taxonomy term view.
 */
function openy_taxonomy_update_8001() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_taxonomy');
  $config .= '/config/override/';
  $config .= 'views.view.taxonomy_term.yml';
  $config_importer->update($config, 'views.view.taxonomy_term', 'display.default.display_options.pager');
}

/**
 * Update tour with token support for demo.
 */
function openy_taxonomy_update_8002() {
  // This is outdated update and exist in next hooks, no need to import config twice.
}

/**
 * Update tour with token support for demo.
 */
function openy_taxonomy_update_8003() {
  $config_dir = drupal_get_path('module', 'openy_taxonomy') . '/config/optional/';
  // Update multiple configurations.
  $configs = [
    'tour.tour.openy-taxonomy-overview' =>[
      'tips',
    ],
    'tour.tour.openy-taxonomy-term' => [
      'tips',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}

/**
 * Update empty area settings in Taxonomy Term view.
 */
function openy_taxonomy_update_8004() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_taxonomy');
  $config .= '/config/override/';
  $config .= 'views.view.taxonomy_term.yml';
  $config_importer->update($config, 'views.view.taxonomy_term', 'display.page_1.display_options');
}

/**
 * Update storage persist_with_no_fields property for field_taxonomy_content.
 */
function openy_taxonomy_update_8005() {
  $config_dir = drupal_get_path('module', 'openy_taxonomy') . '/config/install/';
  // Update multiple configurations.
  $configs = [
    'field.storage.taxonomy_term.field_taxonomy_content' =>[
      'persist_with_no_fields',
    ],
  ];
  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}
