<?php

/**
 * @file
 * Update routines.
 */

/**
 * Add Taxonomy content field.
 */
function openy_txnm_blog_category_update_8001() {
  $config_dir = drupal_get_path('module', 'openy_txnm_blog_category') . '/config/install';
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'core.entity_form_display.taxonomy_term.blog_category.default',
    'core.entity_view_display.taxonomy_term.blog_category.default',
    'field.field.taxonomy_term.blog_category.field_taxonomy_content',
    'field.storage.taxonomy_term.field_taxonomy_content'
  ]);
}

/**
 * Remove DataLayer from dependency in the field instance.
 */
function openy_txnm_blog_category_update_8002() {
  $config_importer = \Drupal::service('openy_upgrade_tool.param_updater');
  $config = drupal_get_path('module', 'openy_txnm_blog_category');
  $config .= '/config/install/';
  $config .= 'field.field.taxonomy_term.blog_category.field_taxonomy_content.yml';
  $config_importer->update(
    $config,
    'field.field.taxonomy_term.blog_category.field_taxonomy_content',
    'dependencies.module'
  );
}

/**
 * Add Blog Category taxonomy terms to the sitemap.
 */
function openy_txnm_blog_category_update_8003() {
  $config_dir = drupal_get_path('module', 'openy_txnm_blog_category');
  $config_dir .= '/config/install/';
  // Import new configuration.
  $config_importer = \Drupal::service('openy_upgrade_tool.importer');
  $config_importer->setDirectory($config_dir);
  $config_importer->importConfigs([
    'simple_sitemap.bundle_settings.taxonomy_term.blog_category',
  ]);
}

/**
 * Update configs for Drupal Core upgrade.
 */
function openy_txnm_blog_category_update_8004() {
  $config_dir = drupal_get_path('module', 'openy_txnm_blog_category') . '/config/install/';
  $configs = [
    'core.entity_form_display.taxonomy_term.blog_category.default' => [
      'content',
    ],
  ];

  $config_updater = \Drupal::service('openy_upgrade_tool.param_updater');
  foreach ($configs as $config_name => $params) {
    $config = $config_dir . $config_name . '.yml';
    foreach ($params as $param) {
      $config_updater->update($config, $config_name, $param);
    }
  }
}
