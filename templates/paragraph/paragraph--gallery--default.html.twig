{#
  /**
  * @file
  * Default theme implementation to display a paragraph.
  *
  * Available variables:
  * - paragraph: Full paragraph entity.
  *   - id: The paragraph ID.
  *   - bundle: The type of the paragraph, for example, "image" or "text".
  *   - authorid: The user ID of the paragraph author.
  *   - createdtime: Formatted creation date. Preprocess functions can
  *     reformat it by calling format_date() with the desired parameters on
  *     $variables['paragraph']->getCreatedTime().
  * - content: All paragraph items. Use {{ content }} to print them all,
  *   or print a subset such as {{ content.field_example }}. Use
  *   {{ content|without('field_example') }} to temporarily suppress the printing
  *   of a given child element.
  * - attributes: HTML attributes for the containing element.
  *   The attributes.class element may contain one or more of the following
  *   classes:
  *   - paragraphs: The current template type (also known as a "theming hook").
  *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
  *     "Image" it would result in "paragraphs--type--image". Note that the machine
  *     name will often be in a short form of the human readable label.
  *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
  *     preview would result in: "paragraphs--view-mode--preview", and
  *     default: "paragraphs--view-mode--default".
  * - view_mode: View mode; for example, "preview" or "full".
  * - logged_in: Flag for authenticated user status. Will be true when the
  *   current user is a logged-in member.
  * - is_admin: Flag for admin user status. Will be true when the current user
  *   is an administrator.
  *
  * @see template_preprocess_paragraph()
  *
  * @ingroup themeable
  */
  #}
{%
  set classes = [
    'paragraph',
    'paragraph-gallery',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  ]
%}
{{ attach_library('ygh/bootstrap.swipe') }}
{% if content.field_images['#items']|length >= 1 %}
  <div{{ attributes.addClass(classes) }}>
    <div id="carousel" class="carousel slide" data-ride="carousel">
      <div class="carousel-inner" role="listbox">
        {% for key, value in content.field_images['#items'] %}
          <div class="item{% if key == 0 %} active{% endif %}">
            {{ content.field_images[key] }}
          </div>
        {% endfor %}
      </div>
      {% if content.field_images['#items']|length > 1 %}
        <a class="left carousel-control" href="#carousel" role="button" data-slide="prev">
          <span class="fa fa-chevron-left" aria-hidden="true"></span>
          <span class="sr-only">{{ 'Previous'|t }}</span>
        </a>
        <a class="right carousel-control" href="#carousel" role="button" data-slide="next">
          <span class="fa fa-chevron-right" aria-hidden="true"></span>
          <span class="sr-only">{{ 'Next'|t }}</span>
        </a>
      {% endif %}
    </div>
    {% if content.field_gallery_headline['#field_name'] is not empty %}
      <div class="cta-group-wrapper">
        <div class="container">
          <div class="row">
            <div class="cta-group">
              <h1>{{ content.field_gallery_headline }}</h1>
              <div class="text">{{ content.field_body_no_summary }}</div>
              <div class="btn btn-default btn-link blue">{{ content.field_gallery_link }}</div>
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  </div>
{% endif %}
