{#
  /**
  * @file
  * Default theme implementation for a field.
  *
  * To override output, copy the "field.html.twig" from the templates directory
  * to your theme's directory and customize it, just like customizing other
  * Drupal templates such as page.html.twig or node.html.twig.
  *
  * Instead of overriding the theming for all fields, you can also just override
  * theming for a subset of fields using
  * @link themeable Theme hook suggestions. @endlink For example,
  * here are some theme hook suggestions that can be used for a field_foo field
  * on an article node type:
  * - field--node--field-foo--article.html.twig
  * - field--node--field-foo.html.twig
  * - field--node--article.html.twig
  * - field--field-foo.html.twig
  * - field--text-with-summary.html.twig
  * - field.html.twig
  *
  * Available variables:
  * - attributes: HTML attributes for the containing element.
  * - label_hidden: Whether to show the field label or not.
  * - title_attributes: HTML attributes for the title.
  * - label: The label for the field.
  * - multiple: TRUE if a field can contain multiple items.
  * - items: List of all the field items. Each item contains:
  *   - attributes: List of HTML attributes for each item.
  *   - content: The field item's content.
  * - entity_type: The entity type to which the field belongs.
  * - field_name: The name of the field.
  * - field_type: The type of the field.
  * - label_display: The display settings for the label.
  *
  * @see template_preprocess_field()
  *
  * @ingroup themeable
  */
  #}

{%
  set classes = [
    field_name|clean_class,
    'block-description--text'
  ]
%}
{% if field_name == 'field_prgf_title' %}
  {% for item in items %}
    <div{{ attributes.addClass('field-prgf-title') }}><h2>{{ item.content }}</h2></div>
  {% endfor %}
{% elseif field_name == 'field_prgf_description' %}
  {% for item in items %}
    <div{{ attributes.addClass('field-prgf-description') }}><p>{{ item.content }}</p></div>
  {% endfor %}
<div class="clearfix"></div>
{% elseif field_name != 'field_prgf_4c_button' %}
  {% if field_name == 'field_prgf_4c_1st' %}
    <div class="wrapper">
  {% endif %}
  {{ attach_library('slick/slick') }}
  {{ attach_library('slick/slick.theme') }}
  {{ attach_library('slick/slick.arrow.down') }}
  {% if label_hidden %}
    {% if multiple %}
      <div{{ attributes.addClass('wrapper-' ~ field_name|clean_class) }}>
        {% for item in items %}
          <div{{ attributes.addClass(field_name|clean_class).removeClass('wrapper-' ~ field_name|clean_class) }}>{{ item.content }}</div>
        {% endfor %}
      </div>
    {% else %}
      {% for item in items %}
        <div{{ attributes.addClass(classes) }}>
          {% set icon_class = item.content.field_icon_class.0 ? item.content.field_icon_class.0 : '' %}
          {% if icon_class %}
            <div class="fa-icon">
              <i class="fa fa-{{ icon_class }}" aria-hidden="true"></i>
            </div>
          {% else %}
            {{ item.content.field_icon }}
          {% endif %}
          {{ item.content|without('field_icon', 'field_icon_class') }}
        </div>
      {% endfor %}
    {% endif %}
  {% else %}
    <div{{ attributes.addClass('wrapper-' ~ field_name|clean_class) }}>
      <div{{ title_attributes.addClass('label-for-' ~ field_name|clean_class) }}>{{ label }}</div>
      {% if multiple %}
      <div>
        {% endif %}
        {% for item in items %}
          <div{{ attributes.addClass(field_name|clean_class).removeClass('wrapper-' ~ field_name|clean_class) }}>{{ item.content }}</div>
        {% endfor %}
        {% if multiple %}
      </div>
      {% endif %}
    </div>
  {% endif %}
  {% if field_name == 'field_prgf_4c_4th' %}
  </div>
  {% endif %}
{% elseif field_name == 'field_prgf_4c_button' %}
  {% for item in items %}
    <div{{ attributes.addClass('field-prgf-4c-button') }}><div class="btn btn-primary">{{ item.content }}</div></div>
  {% endfor %}
{% endif %}
